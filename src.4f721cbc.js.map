{"version":3,"sources":["classes/site.js","utils.js","classes/blocks.js","classes/sidebar.js","classes/app.js","model.js","index.js"],"names":["Site","selector","$el","document","querySelector","model","innerHTML","forEach","block","insertAdjacentHTML","toHTML","row","content","styles","col","css","Object","keys","map","key","join","type","html","convertTypeToClassName","toUpperCase","slice","Block","value","options","Error","TitleBlock","tag","TextBlock","ImageBlock","imageStyles","alt","ColumnsBlock","columns","column","Sidebar","updateCallback","update","init","template","addEventListener","add","bind","event","preventDefault","newBlock","target","name","split","App","site","render","push","background","color","image","display","width","height"],"mappings":"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","file":"src.4f721cbc.js","sourceRoot":"..\\src","sourcesContent":["export class Site {\r\n  constructor(selector) {\r\n    this.$el = document.querySelector(selector)\r\n  }\r\n\r\n  render(model) {\r\n    this.$el.innerHTML = ''\r\n    model.forEach(block => {\r\n        this.$el.insertAdjacentHTML('beforeend', block.toHTML())\r\n    })\r\n  }\r\n}","export function row(content, styles = '') {\r\n  return `\r\n  <div class=\"row\" style=\"${styles}\">\r\n      ${content}\r\n  </div>\r\n  `\r\n}\r\n\r\nexport function col(content) {\r\n  return `\r\n  <div class=\"col-sm\">\r\n      ${content}\r\n  </div>\r\n  `\r\n}\r\n\r\nexport function css(styles = {}) {\r\n  if (typeof styles === 'string') {\r\n    return styles\r\n  }\r\n  const toString = key => `${key}: ${styles[key]}`\r\n  return Object.keys(styles).map(toString).join(';')\r\n}\r\n\r\nexport function block(type) {\r\n    let html = `\r\n        <form name=\"${type}\" data-class=\"${convertTypeToClassName(type)}\">\r\n            <h5>${type}</h5>\r\n            <div class=\"form-group\">\r\n                <input class=\"form-control form-control-sm\" name=\"value\" placeholder=\"value\">\r\n            </div>\r\n            `\r\n    if (type === 'img') {\r\n        html += `\r\n            <div class=\"form-group\">\r\n                <input class=\"form-control form-control-sm\" name=\"imageStyles\" placeholder=\"imageStyles\">\r\n            </div>`\r\n    }\r\n    html += `\r\n        <div class=\"form-group\">\r\n            <input class=\"form-control form-control-sm\" name=\"styles\" placeholder=\"styles\">\r\n        </div>\r\n        <button type=\"submit\" class=\"btn btn-primary btn-sm\">Add</button>\r\n    </form>\r\n    <hr/>`\r\n    return html\r\n}\r\n\r\nfunction convertTypeToClassName(type = '') {\r\n    return `${type[0].toUpperCase()}${type.slice(1)}Block`\r\n}","import {col, css, row} from '../utils'\r\n\r\nclass Block {\r\n  constructor(value, options) {\r\n    this.value = value\r\n    this.options = options\r\n  }\r\n\r\n  toHTML() {\r\n    throw new Error('Method toHTML must be initialized')\r\n  }\r\n}\r\n\r\nexport class TitleBlock extends Block {\r\n  constructor(value, options) {\r\n    super(value, options);\r\n  }\r\n\r\n  toHTML() {\r\n    const { tag = 'h1', styles } = this.options\r\n    return row(\r\n      col(`<${tag}> ${this.value} </${tag}>`),\r\n      css(styles)\r\n    )\r\n  }\r\n}\r\n\r\nexport class TextBlock extends Block {\r\n  constructor(value, options) {\r\n    super(value, options);\r\n  }\r\n\r\n  toHTML() {\r\n    const { tag = 'p', styles } = this.options\r\n    return row(\r\n      col( `<${tag}> ${this.value} </${tag}>` ),\r\n      css(styles)\r\n    )\r\n  }\r\n}\r\n\r\nexport class ImageBlock extends Block {\r\n  constructor(value, options) {\r\n    super(value, options);\r\n  }\r\n\r\n  toHTML() {\r\n    const { styles, imageStyles, alt = '' } = this.options\r\n    return row(\r\n      `<img style=\"${css(imageStyles)}\" src=\"${this.value}\" alt=\"${alt}\" />`,\r\n      css(styles)\r\n    )\r\n  }\r\n}\r\n\r\nexport class ColumnsBlock extends Block {\r\n  constructor(value, options) {\r\n    super(value, options);\r\n  }\r\n\r\n  toHTML() {\r\n    const { styles } = this.options\r\n    let columns = this.value.map(column => col(column))\r\n    return row(columns.join(''), css(styles))\r\n  }\r\n}","import { block } from '../utils'\r\nimport {ColumnsBlock, ImageBlock, TextBlock, TitleBlock} from './blocks'\r\n\r\nexport class Sidebar {\r\n    constructor(selector, updateCallback) {\r\n        this.$el = document.querySelector(selector)\r\n        this.update = updateCallback\r\n        this.init()\r\n    }\r\n\r\n    init() {\r\n        this.$el.insertAdjacentHTML('afterbegin', this.template)\r\n        this.$el.addEventListener('submit', this.add.bind(this))\r\n    }\r\n\r\n    get template() {\r\n        return [\r\n            block('title'),\r\n            block('text'),\r\n            block('img'),\r\n            block('columns'),\r\n        ].join('')\r\n    }\r\n\r\n    add(event) {\r\n        event.preventDefault()\r\n        const type = event.target.name,\r\n            value = event.target.value.value,\r\n            styles = event.target.styles.value,\r\n            imageStyles = event.target.imageStyles?.value\r\n\r\n        let newBlock\r\n        switch (type) {\r\n            case 'title':\r\n                newBlock = new TitleBlock(value, { styles })\r\n                break\r\n            case 'text':\r\n                newBlock = new TextBlock(value, { styles })\r\n                break\r\n            case 'img':\r\n                newBlock = new ImageBlock(value, { styles, imageStyles })\r\n                break\r\n            case 'columns':\r\n                newBlock = new ColumnsBlock(value.split(','), { styles })\r\n                break\r\n            default:\r\n        }\r\n        this.update(newBlock)\r\n        event.target.value.value = event.target.styles.value = ''\r\n        if (imageStyles) {\r\n            event.target.imageStyles.value = ''\r\n        }\r\n    }\r\n}","import { Site } from './site'\r\nimport { Sidebar } from './sidebar'\r\n\r\nexport class App {\r\n    constructor(model) {\r\n        this.model = model\r\n    }\r\n    init() {\r\n        const site = new Site('#site')\r\n        site.render(this.model)\r\n        const updateCallback = newBlock => {\r\n            this.model.push(newBlock)\r\n            site.render(this.model)\r\n        }\r\n        new Sidebar('#panel', updateCallback)\r\n    }\r\n}","import image from './assets/image.png'\r\nimport { TitleBlock, TextBlock, ColumnsBlock, ImageBlock } from './classes/blocks'\r\n\r\nexport const model = [\r\n  new TitleBlock( 'Конструктор сайтов на чистом JavaScript', {\r\n    tag: 'h2',\r\n    styles: {\r\n      'text-align': 'center',\r\n      background: 'gray',\r\n      color: '#fff'\r\n    }\r\n  }),\r\n  new TextBlock( 'Here we go with some text', {\r\n    tag: 'p',\r\n    styles: {}\r\n  }),\r\n  new ColumnsBlock( [\r\n    '111111111',\r\n    '222222222',\r\n    '333333333'\r\n  ], {\r\n    styles: {}\r\n  }),\r\n  new ImageBlock(image, {\r\n    styles: {\r\n      display: 'flex',\r\n      'justify-content': 'center'\r\n    },\r\n    imageStyles: {\r\n      width: '500px',\r\n      height: 'auto'\r\n    },\r\n    alt: 'Picture'\r\n  })\r\n]","import './styles/main.css'\r\nimport {App} from \"./classes/app\";\r\nimport { model } from './model'\r\n\r\nnew App(model).init()"]}